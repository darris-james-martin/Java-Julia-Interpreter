<program> -> function id ( ) <block> end

<block> -> <statement> | <statement> <block>

<statement> -> <if_statement> | <assignment_statement> | <while_statement> | <print_statement> | <for_statement>

<if_statement> -> if <boolean_expression> <block> else <block> end

<while_statement> -> while <boolean_expression> <block> end

<assignment_statement> -> id assignment_operator <arithmetic_expression>

<for_statement> -> for id = <iter> <block> end

<print_statement> -> print ( <arithmetic_expression> )

<iter> -> <arithmetic_expression> : <arithmetic_expression>

<boolean_expression> -> <relative_op> <arithmetic_expression> <arithmetic_expression>

<relative_op> -> le_operator | lt_operator | ge_operator | gt_operator | eq_operator | ne_operator

<arithmetic_expression> -> id | literal_integer | <binary_expression> | literal_boolean | literal_string

<binary_expression> -> <arithmetic_op> <arithmetic_expression> <arithmetic_expression>

<arithmetic_op> -> add_operator | sub_operator | mul_operator | div_operator | mod_operator | exp_operator | rev_div_operator


id -> letter
literal_integer -> digit literal_integer | digit
literal_boolean -> true | false
literal_string -> "text"
literal_undeclared -> ????
assignment_operator -> =
le_operator -> <=
lt_operator -> <
ge_operator -> >=
gt_operator -> >
eq_operator -> = =
ne_operator -> !=
and_operator -> && ???
add_operator -> +
sub_operator -> -
mul_operator -> *
div_operator -> /
mod_operator -> %
rev_div_operator -> \
exp_operator -> ^


Notes:
literal_boolian and literal_string were added to this project. 